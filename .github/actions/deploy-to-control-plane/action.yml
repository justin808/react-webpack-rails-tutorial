# Control Plane GitHub Action

name: Deploy to Control Plane
description: 'Deploys an application to Control Plane'

inputs:
  app_name:
    description: 'Name of the application'
    required: true
  org:
    description: 'Organization name'
    required: true
  github_token:
    description: 'GitHub token'
    required: true
  wait_timeout:
    description: 'Timeout in seconds for waiting for workloads to be ready'
    required: false
    default: 600

outputs:
  rails_url:
    description: 'URL of the deployed Rails application'
    value: ${{ steps.deploy.outputs.rails_url }}

runs:
  using: "composite"
  steps:
    - name: Setup Environment
      uses: ./.github/actions/setup-environment

    - name: Get Commit SHA
      id: get_sha
      shell: bash
      run: ${{ github.action_path }}/scripts/get-commit-sha.sh
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        PR_NUMBER: ${{ env.PR_NUMBER }}

    - name: Deploy to Control Plane
      id: deploy
      shell: bash
      run: |
        echo "🚀 Deploying app for PR #${PR_NUMBER}..."
        
        # Deploy the application and capture the Rails URL
        if ! DEPLOY_OUTPUT=$(cpflow deploy-image -a "${{ inputs.app_name }}" --run-release-phase --org "${{ inputs.org }}" 2>&1); then
          echo "❌ Deployment failed for PR #${PR_NUMBER}"
          echo "Error output:"
          echo "${DEPLOY_OUTPUT}"
          exit 1
        fi
        
        # Extract Rails URL from deployment output
        RAILS_URL=$(echo "${DEPLOY_OUTPUT}" | grep -oP 'https://rails-[^[:space:]]*\.cpln\.app(?=\s|$)' | head -n1)
        if [ -z "${RAILS_URL}" ]; then
          echo "❌ Failed to get Rails URL from deployment output"
          echo "Deployment output:"
          echo "${DEPLOY_OUTPUT}"
          exit 1
        fi
        
        # Wait for all workloads to be ready
        WAIT_TIMEOUT=${WAIT_TIMEOUT:-${{ inputs.wait_timeout }}}
        echo "⏳ Waiting for all workloads to be ready (timeout: ${WAIT_TIMEOUT}s)..."
        
        # Use timeout command with ps:wait
        if ! timeout "${WAIT_TIMEOUT}" bash -c "cpflow ps:wait -a \"${{ inputs.app_name }}\"" 2>&1; then
          TIMEOUT_EXIT=$?
          if [ ${TIMEOUT_EXIT} -eq 124 ]; then
            echo "❌ Timed out waiting for workloads after ${WAIT_TIMEOUT} seconds"
          else
            echo "❌ Workloads did not become ready for PR #${PR_NUMBER} (exit code: ${TIMEOUT_EXIT})"
          fi
          echo "Last deployment output:"
          echo "${DEPLOY_OUTPUT}"
          exit 1
        fi
        
        echo "✅ Deployment successful for PR #${PR_NUMBER}"
        echo "🌐 Rails URL: ${RAILS_URL}"
        echo "rails_url=${RAILS_URL}" >> $GITHUB_OUTPUT
