# Control Plane GitHub Action

name: Deploy to Control Plane
description: 'Deploys the application to Control Plane'

inputs:
  app_name:
    description: 'Name of the application'
    required: true
  org:
    description: 'Organization name'
    required: true
  github_token:
    description: 'GitHub token'
    required: true

outputs:
  rails_url:
    description: 'URL of the deployed Rails application'
    value: ${{ steps.deploy.outputs.rails_url }}

runs:
  using: "composite"
  steps:
    - name: Setup Environment
      uses: ./.github/actions/setup-environment

    - name: Get commit SHA
      id: get_sha
      shell: bash
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "Using commit SHA: $(git rev-parse --short HEAD)"

    - name: Deploy to Control Plane
      id: deploy
      shell: bash
      run: |
        # Create temp file for output
        TEMP_OUTPUT=$(mktemp)
        
        echo "üöÄ Deploying with commit: ${{steps.get_sha.outputs.sha_short}}"
        
        # Build and deploy
        if cpflow build-image -a ${{ inputs.app_name }} --commit=${{steps.get_sha.outputs.sha_short}} --org=${{inputs.org}} | tee "$TEMP_OUTPUT" && \
           cpflow deploy-image -a ${{ inputs.app_name }} --run-release-phase --org ${{inputs.org}} --verbose | tee -a "$TEMP_OUTPUT"; then
          
          # Extract Rails URL
          RAILS_URL=$(grep -o 'https://rails-[^[:space:]]*\.cpln\.app' "$TEMP_OUTPUT")
          if [ -n "$RAILS_URL" ]; then
            echo "rails_url=$RAILS_URL" >> $GITHUB_OUTPUT
            echo "‚úÖ Deployment successful: $RAILS_URL"
          else
            echo "‚ùå Failed to extract Rails URL"
            exit 1
          fi
        else
          echo "‚ùå Deployment failed"
          exit 1
        fi
        rm -f "$TEMP_OUTPUT"
