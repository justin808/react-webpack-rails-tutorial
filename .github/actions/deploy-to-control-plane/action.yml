# Control Plane GitHub Action

name: Deploy to Control Plane
description: 'Deploys the application to Control Plane'

inputs:
  app_name:
    description: 'Name of the application'
    required: true
  org:
    description: 'Organization name'
    required: true
  github_token:
    description: 'GitHub token'
    required: true

outputs:
  rails_url:
    description: 'URL of the deployed Rails application'
    value: ${{ steps.deploy.outputs.rails_url }}

runs:
  using: "composite"
  steps:
    - name: Setup Environment
      uses: ./.github/actions/setup-environment

    - name: Get commit SHA
      id: get_sha
      shell: bash
      run: |
        if [ -n "$PR_NUMBER" ]; then
          # If PR_NUMBER is set, get the PR's head SHA
          PR_SHA=$(gh pr view $PR_NUMBER --json headRefOid --jq '.headRefOid')
          echo "sha=$PR_SHA" >> $GITHUB_OUTPUT
          echo "sha_short=${PR_SHA:0:7}" >> $GITHUB_OUTPUT
          echo "Using PR head commit SHA: ${PR_SHA:0:7}"
        else
          # For direct branch deployments, use the current commit SHA
          CURRENT_SHA=$(git rev-parse HEAD)
          echo "sha=$CURRENT_SHA" >> $GITHUB_OUTPUT
          echo "sha_short=${CURRENT_SHA:0:7}" >> $GITHUB_OUTPUT
          echo "Using branch commit SHA: ${CURRENT_SHA:0:7}"
        fi
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        PR_NUMBER: ${{ env.PR_NUMBER }}

    - name: Build Image
      id: build
      shell: bash
      run: |
        echo "üèóÔ∏è Building image with commit: ${{steps.get_sha.outputs.sha_short}}"
        cpflow build-image -a ${{ inputs.app_name }} --commit=${{steps.get_sha.outputs.sha_short}} --org=${{inputs.org}}

    - name: Deploy Image
      id: deploy
      shell: bash
      run: |
        # Create temp file for output
        TEMP_OUTPUT=$(mktemp)
        
        echo "üöÄ Deploying image..."
        if cpflow deploy-image -a ${{ inputs.app_name }} --run-release-phase --org ${{inputs.org}} --verbose | tee "$TEMP_OUTPUT"; then
          # Extract Rails URL
          RAILS_URL=$(grep -o 'https://rails-[^[:space:]]*\.cpln\.app' "$TEMP_OUTPUT")
          if [ -n "$RAILS_URL" ]; then
            echo "rails_url=$RAILS_URL" >> $GITHUB_OUTPUT
            echo "‚úÖ Deployment successful: $RAILS_URL"
          else
            echo "‚ùå Failed to extract Rails URL"
            exit 1
          fi
        else
          echo "‚ùå Deployment failed"
          exit 1
        fi
        rm -f "$TEMP_OUTPUT"
