# Control Plane GitHub Action

name: Deploy-To-Control-Plane

# Controls when the workflow will run
on:
  # Uncomment the lines you want actions that will cause the workflow to Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  # pull_request:
  #   branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Convert the GitHub secret variables to environment variables for use by the Control Plane CLI
env:
  CPLN_ORG: ${{secrets.CPLN_ORG}}
  CPLN_TOKEN: ${{secrets.CPLN_TOKEN}}

jobs:
  deploy-to-control-plane:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'  # Specify your Ruby version here

      - name: Install Control Plane CLI
        shell: bash
        run: |
          sudo npm install -g @controlplane/cli
          cpln --version
          gem install cpl -v 1.1.2

      - name: Set Short SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: cpl profile
        run: |
          cpln profile update default --token ${CPLN_TOKEN}

      # Caching step
      - uses: actions/cache@v2
        with:
          path: /tmp/docker-layers
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: cpl build-image
        run: |
          cpln image docker-login
          cpl build-image -a ${{ secrets.APP_NAME_STAGING }} --commit ${{steps.vars.outputs.sha_short}}

      - name: Deploy to Control Plane
        run: |
          cpl deploy-image -a ${{ secrets.APP_NAME_STAGING }} 
