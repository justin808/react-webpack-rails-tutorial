name: Deploy Review App to Control Plane

run-name: ${{ github.event_name == 'issue_comment' && 'Deploying Review App' || format('Deploying {0} to Staging App', github.ref_name) }}

on:
  issue_comment:
    types: [created]

# Use concurrency to cancel in-progress runs
concurrency:
  group: deploy-${{ github.event.issue.number }}
  cancel-in-progress: true

env:
  APP_NAME: qa-react-webpack-rails-tutorial-pr-${{ github.event.issue.number }}
  CPLN_ORG: ${{ secrets.CPLN_ORG }}
  CPLN_TOKEN: ${{ secrets.CPLN_TOKEN }}
  PR_NUMBER: ${{ github.event.issue.number }}

jobs:
  Process-Deployment-Command:
    if: |
      github.event_name == 'issue_comment' && 
      github.event.issue.pull_request && 
      github.event.comment.body == '/deploy-review-app'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pull-requests: write
      issues: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR HEAD Ref
        id: getRef
        run: |
          PR_DATA=$(gh pr view $PR_NUMBER --repo ${{ github.repository }} --json headRefName,headRefOid)
          echo "PR_REF=$(echo "$PR_DATA" | jq -r '.headRefName')" >> $GITHUB_OUTPUT
          echo "PR_SHA=$(echo "$PR_DATA" | jq -r '.headRefOid')" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PR Branch
        run: git checkout ${{ steps.getRef.outputs.PR_REF }}

      - name: Deploy to Control Plane
        uses: ./.github/actions/deploy-to-control-plane
        with:
          app_name: ${{ env.APP_NAME }}
          org: ${{ env.CPLN_ORG }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          wait_timeout: ${{ vars.WAIT_TIMEOUT || 900 }}
        env:
          CPLN_TOKEN: ${{ env.CPLN_TOKEN }}
          PR_NUMBER: ${{ env.PR_NUMBER }}
