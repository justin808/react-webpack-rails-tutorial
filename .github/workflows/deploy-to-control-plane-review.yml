name: Deploy Review App

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]

# Use concurrency to cancel in-progress runs
concurrency:
  group: deploy-${{ github.event.pull_request.number || github.event.issue.number }}
  cancel-in-progress: true

env:
  APP_NAME: qa-react-webpack-rails-tutorial-pr-${{ github.event.pull_request.number || github.event.issue.number }}
  CPLN_ORG: ${{ secrets.CPLN_ORG }}
  PR_NUMBER: ${{ github.event.pull_request.number || github.event.issue.number }}

jobs:
  deploy:
    if: |
      github.event_name == 'pull_request' || 
      (github.event_name == 'issue_comment' && 
       github.event.comment.body == '/deploy-review-app' && 
       github.event.issue.pull_request)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pull-requests: write
      issues: write

    steps:
      - uses: actions/checkout@v4

      - name: Create initial comment
        id: create-comment
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentId = Date.now().toString();
            core.exportVariable('deploymentId', deploymentId);
            const comment = await github.rest.issues.createComment({
              issue_number: context.issue.number || context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Starting deployment [${deploymentId}] for ${context.sha.substring(0, 7)}`
            });
            core.setOutput('comment-id', comment.data.id);

      - name: Deploy to Control Plane
        id: deploy
        uses: ./.github/actions/deploy-to-control-plane
        with:
          app_name: ${{ env.APP_NAME }}
          org: ${{ env.CPLN_ORG }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Post deployment status
        if: always()
        uses: ./.github/actions/post-deployment-status
        with:
          status: ${{ job.status == 'success' && 'success' || 'failure' }}
          rails-url: ${{ steps.deploy.outputs.rails_url }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ env.deploymentId }}
          comment-id: ${{ steps.create-comment.outputs.comment-id }}
          workflow-url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
