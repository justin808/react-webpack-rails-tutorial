// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as $$Comment from "./Comment/Comment.bs.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as JsxRuntime from "react/jsx-runtime";
import * as ReactTransitionGroup from "react-transition-group";
import RescriptPageModuleScss from "../RescriptPage.module.scss";

var css = RescriptPageModuleScss;

var TransitionGroup = {};

var CSSTransition = {};

function CommentList(props) {
  var cssTransitionGroupClassNames_enter = css.elementEnter;
  var cssTransitionGroupClassNames_enterActive = css.elementEnterActive;
  var cssTransitionGroupClassNames_exit = css.elementLeave;
  var cssTransitionGroupClassNames_exitActive = css.elementLeaveActive;
  var cssTransitionGroupClassNames = {
    enter: cssTransitionGroupClassNames_enter,
    enterActive: cssTransitionGroupClassNames_enterActive,
    exit: cssTransitionGroupClassNames_exit,
    exitActive: cssTransitionGroupClassNames_exitActive
  };
  var errorMsg;
  if (props.error) {
    var nodeRef = React.useRef(null);
    errorMsg = JsxRuntime.jsx(ReactTransitionGroup.CSSTransition, {
          children: JsxRuntime.jsx("div", {
                children: JsxRuntime.jsx("strong", {
                      children: "Your comment was not saved!"
                    }),
                className: "alert alert-danger"
              }),
          timeout: 500,
          nodeRef: nodeRef,
          classNames: cssTransitionGroupClassNames
        }, "commentFetchError");
  } else {
    errorMsg = JsxRuntime.jsx(JsxRuntime.Fragment, {});
  }
  var commentsElements = Belt_Array.map(props.comments, (function (comment) {
          var nodeRef = React.useRef(null);
          return JsxRuntime.jsx(ReactTransitionGroup.CSSTransition, {
                      children: JsxRuntime.jsx($$Comment.make, {
                            comment: comment,
                            nodeRef: nodeRef
                          }),
                      timeout: 500,
                      nodeRef: nodeRef,
                      classNames: cssTransitionGroupClassNames
                    }, "component_" + String(comment.id));
        }));
  return JsxRuntime.jsxs("div", {
              children: [
                errorMsg,
                JsxRuntime.jsx(ReactTransitionGroup.TransitionGroup, {
                      children: commentsElements,
                      className: "commentList",
                      component: "div"
                    })
              ]
            });
}

var make = CommentList;

export {
  css ,
  TransitionGroup ,
  CSSTransition ,
  make ,
}
/* css Not a pure module */
