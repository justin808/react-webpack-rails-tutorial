// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as JsxRuntime from "react/jsx-runtime";
import CommentFormModuleScss from "./CommentForm.module.scss";

var css = CommentFormModuleScss;

function CommentForm(props) {
  var storeComment = props.storeComment;
  var match = React.useState(function () {
        return "";
      });
  var setAuthor = match[1];
  var author = match[0];
  var match$1 = React.useState(function () {
        return "";
      });
  var setText = match$1[1];
  var text = match$1[0];
  var match$2 = React.useState(function () {
        return "Horizontal Form";
      });
  var setCurrFormType = match$2[1];
  var currformType = match$2[0];
  var handleAuthorChange = function (e) {
    Curry._1(setAuthor, e.currentTarget.value);
  };
  var handleTextChange = function (e) {
    Curry._1(setText, e.currentTarget.value);
  };
  var handleSubmit = function (e) {
    e.preventDefault();
    Curry._2(storeComment, author, text);
  };
  var horizontalForm = JsxRuntime.jsxs("form", {
        children: [
          JsxRuntime.jsxs("div", {
                children: [
                  JsxRuntime.jsx("div", {
                        children: JsxRuntime.jsx("label", {
                              children: "Name",
                              className: "form-label pull-right"
                            }),
                        className: "col-sm-2"
                      }),
                  JsxRuntime.jsx("div", {
                        children: JsxRuntime.jsx("input", {
                              className: "form-control",
                              placeholder: "Your Name",
                              type: "text",
                              value: author,
                              onChange: handleAuthorChange
                            }),
                        className: "col-sm-10"
                      })
                ],
                className: "form-group"
              }),
          JsxRuntime.jsxs("div", {
                children: [
                  JsxRuntime.jsx("div", {
                        children: JsxRuntime.jsx("label", {
                              children: "Text",
                              className: "form-label pull-right"
                            }),
                        className: "col-sm-2"
                      }),
                  JsxRuntime.jsx("div", {
                        children: JsxRuntime.jsx("input", {
                              className: "form-control",
                              placeholder: "Say something using markdown...",
                              type: "text",
                              value: text,
                              onChange: handleTextChange
                            }),
                        className: "col-sm-10"
                      })
                ],
                className: "form-group"
              }),
          JsxRuntime.jsx("div", {
                children: JsxRuntime.jsx("div", {
                      children: JsxRuntime.jsx("input", {
                            className: "btn btn-primary",
                            type: "submit"
                          }),
                      className: "col-sm-10 col-sm-offset-2"
                    }),
                className: "form-group"
              })
        ],
        className: "form-horizontal",
        disabled: props.isSaving,
        onSubmit: handleSubmit
      });
  var inlineForm = JsxRuntime.jsxs("form", {
        children: [
          JsxRuntime.jsxs("div", {
                children: [
                  JsxRuntime.jsx("label", {
                        children: "Name",
                        className: "form-label mr-15"
                      }),
                  JsxRuntime.jsx("input", {
                        className: "form-control",
                        placeholder: "Your Name",
                        type: "text",
                        value: author
                      })
                ],
                className: "form-group"
              }),
          JsxRuntime.jsxs("div", {
                children: [
                  JsxRuntime.jsx("label", {
                        children: "Text",
                        className: "form-label mr-15"
                      }),
                  JsxRuntime.jsx("input", {
                        className: "form-control w-50",
                        placeholder: "Say something using markdown...",
                        type: "text",
                        value: text,
                        onChange: handleTextChange
                      })
                ],
                className: "form-group ml-15 mr-15"
              }),
          JsxRuntime.jsx("div", {
                children: JsxRuntime.jsx("input", {
                      className: "btn btn-primary",
                      type: "submit",
                      onSubmit: handleSubmit
                    }),
                className: "form-group"
              })
        ],
        className: "form-inline",
        onChange: handleAuthorChange
      });
  var stackedForm = JsxRuntime.jsxs("form", {
        children: [
          JsxRuntime.jsxs("div", {
                children: [
                  JsxRuntime.jsx("label", {
                        children: "Name",
                        className: "form-label"
                      }),
                  JsxRuntime.jsx("input", {
                        className: "form-control",
                        placeholder: "Your Name",
                        type: "text",
                        value: author,
                        onChange: handleAuthorChange
                      })
                ],
                className: "form-group"
              }),
          JsxRuntime.jsxs("div", {
                children: [
                  JsxRuntime.jsx("label", {
                        children: "Name",
                        className: "form-label"
                      }),
                  JsxRuntime.jsx("input", {
                        className: "form-control",
                        placeholder: "Say something using markdown...",
                        type: "text",
                        value: text,
                        onChange: handleTextChange
                      })
                ],
                className: "form-group"
              }),
          JsxRuntime.jsx("div", {
                children: JsxRuntime.jsx("input", {
                      className: "btn btn-primary",
                      type: "submit",
                      onSubmit: handleSubmit
                    }),
                className: "form-group"
              })
        ],
        onChange: handleAuthorChange
      });
  var formTypes = [
    "Horizontal Form",
    "Stacked Form",
    "Inline Form"
  ];
  var formsNavbarComponent = Belt_Array.map(formTypes, (function (formType) {
          return JsxRuntime.jsx("li", {
                      children: JsxRuntime.jsx("a", {
                            children: formType,
                            className: css.anchorButton
                          }),
                      className: "nav-item " + (
                        currformType === formType ? "active" : ""
                      ),
                      role: "presentation",
                      onClick: (function (param) {
                          Curry._1(setCurrFormType, (function (param) {
                                  return formType;
                                }));
                        })
                    }, "form_" + formType);
        }));
  var form;
  switch (currformType) {
    case "Horizontal Form" :
        form = horizontalForm;
        break;
    case "Inline Form" :
        form = inlineForm;
        break;
    case "Stacked Form" :
        form = stackedForm;
        break;
    default:
      form = horizontalForm;
  }
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("ul", {
                      children: formsNavbarComponent,
                      className: "nav nav-pills"
                    }),
                JsxRuntime.jsx("hr", {}),
                form
              ]
            });
}

var make = CommentForm;

export {
  css ,
  make ,
}
/* css Not a pure module */
