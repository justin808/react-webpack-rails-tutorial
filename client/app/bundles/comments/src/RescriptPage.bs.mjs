// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Header from "./Header/Header.bs.mjs";
import * as Actions from "./Actions/Actions.bs.mjs";
import * as CommentForm from "./CommentForm/CommentForm.bs.mjs";
import * as CommentList from "./CommentList/CommentList.bs.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function RescriptPage(props) {
  var match = React.useState(function () {
        return [];
      });
  var setComments = match[1];
  var match$1 = React.useState(function () {
        return false;
      });
  var setError = match$1[1];
  var match$2 = React.useState(function () {
        return false;
      });
  var setIsSaving = match$2[1];
  var storeComment = function (author, text) {
    Curry._1(setIsSaving, (function (param) {
            return true;
          }));
    ((async function (param) {
            try {
              await Actions.Api.storeComment(author, text);
              var comments = await Actions.Api.fetchComments(undefined);
              Curry._1(setIsSaving, (function (param) {
                      return false;
                    }));
              return Curry._1(setComments, (function (param) {
                            return comments;
                          }));
            }
            catch (exn){
              return Curry._1(setError, (function (param) {
                            return true;
                          }));
            }
          })(undefined));
  };
  React.useEffect((function () {
          var fetchData = async function (param) {
            var comments = await Actions.Api.fetchComments(undefined);
            return Curry._1(setComments, (function (param) {
                          return comments;
                        }));
          };
          fetchData(undefined);
        }), []);
  return JsxRuntime.jsxs(JsxRuntime.Fragment, {
              children: [
                JsxRuntime.jsxs("h2", {
                      children: [
                        "Rescript + Rails Backend (with ",
                        JsxRuntime.jsx("a", {
                              children: "react_on_rails gem",
                              href: "https://github.com/shakacode/react_on_rails"
                            }),
                        ")"
                      ]
                    }),
                JsxRuntime.jsx(Header.make, {}),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("h2", {
                              children: "Comments"
                            }),
                        JsxRuntime.jsxs("ul", {
                              children: [
                                JsxRuntime.jsx("li", {
                                      children: "Text supports Github Flavored Markdown."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Comments older than 24 hours are deleted."
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "Name is preserved. Text is reset, between submits"
                                    }),
                                JsxRuntime.jsx("li", {
                                      children: "To see Action Cable instantly update two browsers, open two browsers and submit a comment!"
                                    })
                              ]
                            }),
                        JsxRuntime.jsx(CommentForm.make, {
                              storeComment: storeComment,
                              isSaving: match$2[0]
                            }),
                        JsxRuntime.jsx(CommentList.make, {
                              comments: match[0],
                              error: match$1[0]
                            })
                      ],
                      className: "container"
                    })
              ]
            });
}

var make = RescriptPage;

export {
  make ,
}
/* react Not a pure module */
