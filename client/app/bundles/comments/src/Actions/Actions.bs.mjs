// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Axios from "axios";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import ReactOnRails from "react-on-rails";
import * as Json$JsonCombinators from "@glennsl/rescript-json-combinators/src/Json.bs.mjs";
import * as Json_Decode$JsonCombinators from "@glennsl/rescript-json-combinators/src/Json_Decode.bs.mjs";

async function fetchComments(param) {
  var response = await fetch("comments.json");
  var jsonRes = await response.json();
  var jsonComment = Json_Decode$JsonCombinators.object(function (field) {
        return {
                author: field.required("author", Json_Decode$JsonCombinators.string),
                text: field.required("text", Json_Decode$JsonCombinators.string),
                id: field.required("id", Json_Decode$JsonCombinators.$$int)
              };
      });
  var jsonComments = Json_Decode$JsonCombinators.object(function (field) {
        return {
                comments: field.required("comments", Json_Decode$JsonCombinators.array(jsonComment))
              };
      });
  var decodedRes = Json$JsonCombinators.decode(jsonRes, jsonComments);
  if (decodedRes.TAG === /* Ok */0) {
    return decodedRes._0.comments;
  } else {
    return Js_exn.raiseError(decodedRes._0);
  }
}

async function storeComment(author, text) {
  await Axios.post("comments.json", {
        author: author,
        text: text
      }, {
        responseType: "json",
        headers: Curry._1(ReactOnRails.default.authenticityHeaders, undefined)
      });
}

var Api = {
  fetchComments: fetchComments,
  storeComment: storeComment
};

export {
  Api ,
}
/* axios Not a pure module */
