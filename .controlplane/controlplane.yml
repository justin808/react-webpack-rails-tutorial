# Configuration for `cpl` commands.

# Keys beginning with "cpln_" correspond to your settings in Control Plane.

# Global settings that apply to `cpl` usage.
# You can opt out of allowing the use of CPLN_ORG and CPLN_APP env vars
# to avoid any accidents with the wrong org / app.
allow_org_override_by_env: true
allow_app_override_by_env: true

aliases:
  common: &common
    # Org for staging and QA apps is typically set as an alias, shared by all apps, except for production apps.
    # Production apps will use a different org than staging for security.
    # Change this value to your org name
    # or set ENV CPLN_ORG to your org name as that will override whatever is used here for all cpl commands
    # cpln_org: shakacode-open-source-examples

    # Example apps use only location. CPLN offers the ability to use multiple locations.
    default_location: aws-us-east-2
    # Configure the workload name used as a template for one-off scripts, like a Heroku one-off dyno.
    one_off_workload: rails
    # Like the entries in the Heroku Procfile that get deployed when the application code changes
    # and the application image updates.
    app_workloads:
      - rails
      - daily-task
    # Additional workloads that are not affected by deploy-image and promote-app-from-upstream
    # These workloads apply to the ps commands
    additional_workloads:
      - redis
      - postgres

    # Configure the workload name used when maintenance mode is on (defaults to "maintenance").
    maintenance_workload: maintenance

apps:
  react-webpack-rails-tutorial:
    # Simulate Production Version
    <<: *common
    # Don't allow overriding the org and app by ENV vars b/c production is sensitive!
    allow_org_override_by_env: false
    allow_app_override_by_env: false

    # Use a different organization for production.
    cpln_org: shakacode-open-source-examples

    upstream: react-webpack-rails-tutorial-staging

    release_script: release_script.sh

  react-webpack-rails-tutorial-staging:
    <<: *common
  # QA Apps are like Heroku review apps, but the use `prefix` so you can run a commmand like
  # this to create a QA app for the tutorial app.
  # `cpl setup gvc postgres redis rails -a qa-react-webpack-rails-tutorial-pr-1234`
  qa-react-webpack-rails-tutorial:
    <<: *common
    # Prefix is used to identify these "qa" apps.
    prefix: true
